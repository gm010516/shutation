// Generated by view binder compiler. Do not edit!
package com.example.shutation.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CalendarView;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.shutation.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCalendarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView CalendarContent;

  @NonNull
  public final TextView CalendarTextView;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final EditText contextEditText;

  @NonNull
  public final Button deleteBtn;

  @NonNull
  public final Button saveBtn;

  @NonNull
  public final TextView title;

  @NonNull
  public final Button updateBtn;

  private ActivityCalendarBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView CalendarContent, @NonNull TextView CalendarTextView,
      @NonNull CalendarView calendarView, @NonNull EditText contextEditText,
      @NonNull Button deleteBtn, @NonNull Button saveBtn, @NonNull TextView title,
      @NonNull Button updateBtn) {
    this.rootView = rootView;
    this.CalendarContent = CalendarContent;
    this.CalendarTextView = CalendarTextView;
    this.calendarView = calendarView;
    this.contextEditText = contextEditText;
    this.deleteBtn = deleteBtn;
    this.saveBtn = saveBtn;
    this.title = title;
    this.updateBtn = updateBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.CalendarContent;
      TextView CalendarContent = ViewBindings.findChildViewById(rootView, id);
      if (CalendarContent == null) {
        break missingId;
      }

      id = R.id.CalendarTextView;
      TextView CalendarTextView = ViewBindings.findChildViewById(rootView, id);
      if (CalendarTextView == null) {
        break missingId;
      }

      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.contextEditText;
      EditText contextEditText = ViewBindings.findChildViewById(rootView, id);
      if (contextEditText == null) {
        break missingId;
      }

      id = R.id.deleteBtn;
      Button deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.saveBtn;
      Button saveBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.updateBtn;
      Button updateBtn = ViewBindings.findChildViewById(rootView, id);
      if (updateBtn == null) {
        break missingId;
      }

      return new ActivityCalendarBinding((ConstraintLayout) rootView, CalendarContent,
          CalendarTextView, calendarView, contextEditText, deleteBtn, saveBtn, title, updateBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
